###############################################
# Avanco Informatica Ltda		      #
# Script para atualizacao do Sistema Integral #
# Nome: atu-exec			      #
# Autor: Denio dos Santos                     #
# Data: 09/09/2003                            #
###############################################

#### Inibe <CTRL C>
stty -isig

#### Teste se o usuario e root.
if [ $USER = root ]; then
   tput smso
   echo 'VOCE ESTA COM O USUARIO ROOT, ACESSO NEGADO !!!'
   tput rmso
   exit
fi

#### Limpa Tela.
clear

#### Funcao tela de apresentacao.
apresenta() {
	    clear
    	    tput smso
    	    tput cup 7 15
            echo "                                                  "
    	    tput cup 8 15
            echo "         ATUALIZACAO DO SISTEMA INTEGRAL          "
            tput cup 9 15
            echo "      ATENCAO! ANTES DE EXECUTAR ESTA ROTINA      "
            tput cup 10 15
            echo " VERIFIQUE SE NAO HA USUARIOS NO SISTEMA INTEGRAL "
    	    tput cup 11 15
            echo "                                                  "
    	    tput cup 12 15
            echo "    DIGITE <S> PARA CONTINUAR OU <N> PARA SAIR    "
    	    tput cup 13 15
            echo -n "                                                  "
            while  
                tput smso
		tput cup 15 31
		echo -n " ESCOLHA A OPCAO: "
                tput rmso 
            do
		read opcao
		case $opcao in  
	             S|s|N|n)	break ;;
		esac
		tput cup 15 49
		echo "                     " 
	    done
	    if [ $opcao = "N" ] || [ $opcao = "n" ]; then
	         clear
	         tput smso
		 tput cup 12 27
	         echo -n " ROTINA NAO EXECUTADA !!! "
	         tput rmso
		 tput cup 23 1
	         echo ' '
	         exit
	    fi
}	

#### Funcao tela de finalizacao.
finaliza() {
	    clear
    	    tput smso
    	    tput cup 7 15
            echo "                                                  "
    	    tput cup 8 15
            echo "  PROCESSO DE ATUALIZACAO REALIZADO COM SUCESSO!  "
            tput cup 9 15
            echo "                                                  "
            tput cup 10 15
            echo " OS PROGRAMAS ANTERIORES ATUALIZADOS ESTAO SALVOS "
    	    tput cup 11 15
            echo " NO DIRETORIO: "$dir_xxx"    "
    	    tput cup 12 15
            echo "                                                  "
    	    tput cup 13 15
            echo -n "                <ENTER> PARA SAIR                 "
            tput rmso
            read nada
}	

#### Monta variaveis de ambiente.
arq_atu='atu-'`date +%y%m%d%H%M%S`
dir_arq='/u/avanco/'$arq_atu
dir_tmp='.tmp'`date +%H%M%S`
dir_atu=$PWD
dir_mon=$dir_atu'/'$dir_tmp
dir_exe=$COBPATH
dir_exa=$COBPATH'-a'
dir_xxx=$dir_exa'/'$arq_atu
dir_ant=''
arq_exe=''
arq_exa=''
arq_lis=''
m_arq=''
c_arq=''
m_nda='' 

#### Apresentacao.
apresenta

#### Colhe nome do arquivo atualizador compactado.
clear
tput smso
tput cup 11 25
echo " INFORME O ARQUIVO COMPACTADO "
tput cup 12 25
echo -n " DE ATUALIZACAO SEM EXTENSAO: " 
tput rmso
read c_arq

#### Monta nome do arquivo de atualizacao + diretorio.
m_arq=$dir_atu'/'$c_arq'.r*'

echo $m_arq

#### Testa se existe arquivo de atualizacao.
#### Se nao remove diretorio temporaio e sai do script.
if [ ! -r $m_arq ]; then
     clear
     tput smso
     tput cup 12 20
     echo -n " ARQUIVO DE ATUALIZACAO INEXISTENTE !!! "
     tput rmso
     rm -rf $dir_mon
     tput cup 23 1
     echo ' '
     exit
fi

#### Testa se existe diretorio exec-a. 
#### Se nao existe cria.
if [ ! -r $dir_exa ]; then
     mkdir $dir_exa
fi

#### Testa se existe diretorio exec-a/atualizacao (atu-AAMMDDHHMMSS). 
#### Se nao existe cria.
if [ ! -r $dir_xxx ]; then
     mkdir $dir_xxx
fi

#### Testa se existe diretorio avanco. 
#### Se nao existe cria.
if [ ! -r /u/avanco ]; then
     mkdir /u/avanco
fi

#### Testa se existe diretorio avanco. 
#### Se nao existe cria.
if [ ! -r $dir_exa ]; then
     mkdir $dir_exa
fi

#### Testa diretorio temporario. 
#### Se existe remove e cria novamente.
if [ -x $dir_mon ]; then
     rm -rf $dir_mon
fi

mkdir $dir_mon

clear
tput smso
tput cup 12 22
echo -n " DESCOMPACTA ARQUIVO AGUARDE... "
tput rmso
cp $m_arq $dir_mon
cd $dir_mon
rar e -y -inul $c_arq
echo "PROGRAMAS ATUALIZADOS" > $dir_arq
ls *.int >> $dir_arq
ls *.int > arquivo
qt_arq=`wc -l arquivo`
qt_tot=1

clear
ls *.int | while read executaveis
do
    tput smso
    tput cup 11 20
    echo 'Atualiza   =>' $executaveis'    '
    tput cup 13 20
    echo -n 'Processado =>' $qt_tot' de '$qt_arq'(s)'
    tput rmso
    arq_exe=$dir_exe'/'$executaveis
    arq_exa=$dir_xxx'/'$executaveis
    cp $arq_exe $arq_exa
    cp $executaveis $dir_exe
    qt_tot=`expr $qt_tot + 1`
done

clear
tput smso
tput cup 12 22
echo -n " EXCLUI ATUALIZACOES ANTIGAS... "
tput rmso

cd $dir_exa
l_aux=1

ls -d -r atu* | while read diretorios
do
    l_aux=`expr $l_aux + 1`
    if [ $l_aux -gt 11 ]; then
         rm -rf $diretorios
    fi	 
done

cd /u/avanco
l_aux=1

ls -d -r atu* | while read avancos
do
    l_aux=`expr $l_aux + 1`
    if [ $l_aux -gt 11 ]; then
         rm -rf $avancos
    fi	 
done

finaliza

#### Limpa diretorio temporaio.
rm -rf $dir_mon
tput cup 23 1
echo ' '
exit
